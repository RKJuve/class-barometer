<!DOCTYPE html>
<html>
	<head>
	  <title>CF Class Barometer</title>

	  {{!-- jQuery --}}
	  <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>
	  {{!-- underscore --}}
	  <script src="lib/underscore.js"></script>
	  {{!-- backbone --}}
	  <script src="lib/backbone.js"></script>
	  {{!-- handlebars --}}
	  <script src="lib/handlebars.js"></script>
	  {{!-- bring in socket.io --}}
	  <script src="/socket.io/socket.io.js"></script>
	  {{!-- backbone App --}}
	  <script src="main.js"></script>
	</head>
	<body>
	<form action="">
		
		<input name="classroomName" type="text"></input>
		<button id="createClassroom" type="button">create classroom</button>

	</form>
	<div id='dropzone'></div>

		 <script>
    // create Students collection instance
    App.students = new App.Students();
    //create Classrooms collection instance
    App.classrooms = new App.Classrooms();

    // start socket connection
    var socket = io.connect(window.location.origin);

    // socket behavior for classroomsUpdate
    socket.on('classroomsUpdate', function(data){
    	var temp = [];
      _.each(data, function(elem, index, list) {
        temp.push({ name: elem });
      });

    	App.classrooms.set(temp);

    	if (App.classroomsView) {
        App.classroomsView.el.innerHTML = '';
        App.classroomsView.render();
      } else {
        App.classroomsView = new App.ClassroomsView({
          collection: App.classrooms
        }); 
    	}
    	$(".classroom").on("click", function(e){
      e.preventDefault();
      socket.emit('teacherJoinClassroom', $(this).attr("data"));

      });
    });

    // socket update behavior
    socket.on("update", function(data){
      var temp = [];
      _.each(data, function(elem, index, list) {
        temp.push({ id: index, status: elem.status, comment: elem.comment });
      });

      App.students.reset(temp);

      if (App.studentsView) {
        App.studentsView.el.innerHTML = '';
        App.studentsView.render();
      } else {
        App.studentsView = new App.StudentsView({
          collection: App.students
        }); 
      }
    });

    socket.on('nameUpdate', function(data){
    	//update each model by id, with name
    });

    //override form submit action
    $('#createClassroom').on('click', function(e){
    	e.preventDefault();
    	socket.emit('createClassroom', $("[name='classroomName']").val())
    })

    $('form').on('submit', function(e){
      e.preventDefault();
      //oh god this is hacky. TODO: split creating a class into a function
      $("#createClassroom").trigger("click");
    });
    
    

  </script>
	</body>
</html>