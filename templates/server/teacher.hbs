<!DOCTYPE html>
<html>
	<head>
	  <title>CF Class Barometer</title>
    <link rel="stylesheet" href="style.css">
	  {{!-- jQuery --}}
	  <script src="//cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min.js"></script>
	  {{!-- underscore --}}
	  <script src="lib/underscore.js"></script>
	  {{!-- backbone --}}
	  <script src="lib/backbone.js"></script>
	  {{!-- handlebars --}}
	  <script src="lib/handlebars.js"></script>
	  {{!-- bring in socket.io --}}
	  <script src="/socket.io/socket.io.js"></script>
	  {{!-- backbone App --}}
	  <script src="main.js"></script>
	</head>
	<body>
  <div id="wrap">
    <nav class="navigation" role="navigation">
      <div class="container">
        <h1>Class Barometer</h1>
      </div>
    </nav>

    <div id="main">
      <div class="container">
        <div class="row">
          <div class="col-md-12">
            <h2 class="page-title">Title</h2>
          </div> 
          <div class="col-md-12">
            <form>
              <input name="classroomName" type="text" class="form-control"></input>
              <button type="button" id="createClassroom" class="btn btn-primary teacher">Create Classroom</button>
            </form>
          </div>
          <div class="col-md-12">
            <ul id='classroomList'></ul>
          </div>
        </div>
      </div>
    </div>
  </div>

		 <script>
    // create Students collection instance
    App.students = new App.Students();
    //create Classrooms collection instance
    App.classrooms = new App.Classrooms();

    // start socket connection
    var socket = io.connect(window.location.origin);

    // socket behavior for classroomsUpdate
    socket.on('classroomsUpdate', function(data){
    	var temp = [];
      _.each(data, function(elem, index, list) {
        temp.push({ name: elem });
      });

    	App.classrooms.set(temp);

    	if (App.classroomsView) {
        App.classroomsView.el.innerHTML = '';
        App.classroomsView.render();
      } else {
        App.classroomsView = new App.ClassroomsView({
          collection: App.classrooms
        }); 
    	}
    	$(".classroom").on("click", function(e){
      e.preventDefault();
      socket.emit('teacherJoinClassroom', $(this).attr("data"));

      });
    });

    // socket update behavior
    socket.on("update", function(data){
      var temp = [];
      _.each(data, function(elem, index, list) {
        temp.push({ id: index, status: elem.status, comment: elem.comment });
      });

      App.students.reset(temp);

      if (App.studentsView) {
        App.studentsView.el.innerHTML = '';
        App.studentsView.render();
      } else {
        App.studentsView = new App.StudentsView({
          collection: App.students
        }); 
      }
    });

    socket.on('nameUpdate', function(data){
    	//update each model by id, with name
    });

    //override form submit action
    $('#createClassroom').on('click', function(e){
      e.preventDefault();
      var classroomName = $("[name='classroomName']");

      // Trim whitespaces from before or after classroom name
      var trimmedName = classroomName.val().replace(/^\s\s*/, '').replace(/\s\s*$/, '');

      // Prevent blank submisstions
      if (trimmedName.length === 0) {
        return;
      }
      socket.emit('createClassroom', trimmedName);

      // Clear input after submission
      classroomName.val("");
    });

    $('form').on('submit', function(e){
      e.preventDefault();
      //oh god this is hacky. TODO: split creating a class into a function
      $("#createClassroom").trigger("click");
    });
    
    

  </script>
	</body>
</html>